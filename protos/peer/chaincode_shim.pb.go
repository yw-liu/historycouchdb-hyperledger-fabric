// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer/chaincode_shim.proto

package peer // import "github.com/hyperledger/fabric/protos/peer"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ChaincodeMessage_Type int32

const (
	ChaincodeMessage_UNDEFINED                        ChaincodeMessage_Type = 0
	ChaincodeMessage_REGISTER                         ChaincodeMessage_Type = 1
	ChaincodeMessage_REGISTERED                       ChaincodeMessage_Type = 2
	ChaincodeMessage_INIT                             ChaincodeMessage_Type = 3
	ChaincodeMessage_READY                            ChaincodeMessage_Type = 4
	ChaincodeMessage_TRANSACTION                      ChaincodeMessage_Type = 5
	ChaincodeMessage_COMPLETED                        ChaincodeMessage_Type = 6
	ChaincodeMessage_ERROR                            ChaincodeMessage_Type = 7
	ChaincodeMessage_GET_STATE                        ChaincodeMessage_Type = 8
	ChaincodeMessage_PUT_STATE                        ChaincodeMessage_Type = 9
	ChaincodeMessage_DEL_STATE                        ChaincodeMessage_Type = 10
	ChaincodeMessage_INVOKE_CHAINCODE                 ChaincodeMessage_Type = 11
	ChaincodeMessage_RESPONSE                         ChaincodeMessage_Type = 13
	ChaincodeMessage_GET_STATE_BY_RANGE               ChaincodeMessage_Type = 14
	ChaincodeMessage_GET_QUERY_RESULT                 ChaincodeMessage_Type = 15
	ChaincodeMessage_QUERY_STATE_NEXT                 ChaincodeMessage_Type = 16
	ChaincodeMessage_QUERY_STATE_CLOSE                ChaincodeMessage_Type = 17
	ChaincodeMessage_KEEPALIVE                        ChaincodeMessage_Type = 18
	ChaincodeMessage_GET_HISTORY_FOR_KEY              ChaincodeMessage_Type = 19
	ChaincodeMessage_GET_HISTORY_QUERY_RESULT         ChaincodeMessage_Type = 20
	ChaincodeMessage_GET_HISTORY_FOR_KEY_PAGE_ENABLED ChaincodeMessage_Type = 21
)

var ChaincodeMessage_Type_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "REGISTER",
	2:  "REGISTERED",
	3:  "INIT",
	4:  "READY",
	5:  "TRANSACTION",
	6:  "COMPLETED",
	7:  "ERROR",
	8:  "GET_STATE",
	9:  "PUT_STATE",
	10: "DEL_STATE",
	11: "INVOKE_CHAINCODE",
	13: "RESPONSE",
	14: "GET_STATE_BY_RANGE",
	15: "GET_QUERY_RESULT",
	16: "QUERY_STATE_NEXT",
	17: "QUERY_STATE_CLOSE",
	18: "KEEPALIVE",
	19: "GET_HISTORY_FOR_KEY",
	20: "GET_HISTORY_QUERY_RESULT",
	21: "GET_HISTORY_FOR_KEY_PAGE_ENABLED",
}
var ChaincodeMessage_Type_value = map[string]int32{
	"UNDEFINED":                        0,
	"REGISTER":                         1,
	"REGISTERED":                       2,
	"INIT":                             3,
	"READY":                            4,
	"TRANSACTION":                      5,
	"COMPLETED":                        6,
	"ERROR":                            7,
	"GET_STATE":                        8,
	"PUT_STATE":                        9,
	"DEL_STATE":                        10,
	"INVOKE_CHAINCODE":                 11,
	"RESPONSE":                         13,
	"GET_STATE_BY_RANGE":               14,
	"GET_QUERY_RESULT":                 15,
	"QUERY_STATE_NEXT":                 16,
	"QUERY_STATE_CLOSE":                17,
	"KEEPALIVE":                        18,
	"GET_HISTORY_FOR_KEY":              19,
	"GET_HISTORY_QUERY_RESULT":         20,
	"GET_HISTORY_FOR_KEY_PAGE_ENABLED": 21,
}

func (x ChaincodeMessage_Type) String() string {
	return proto.EnumName(ChaincodeMessage_Type_name, int32(x))
}
func (ChaincodeMessage_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0, 0}
}

type ChaincodeMessage struct {
	Type      ChaincodeMessage_Type       `protobuf:"varint,1,opt,name=type,enum=protos.ChaincodeMessage_Type" json:"type,omitempty"`
	Timestamp *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Payload   []byte                      `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Txid      string                      `protobuf:"bytes,4,opt,name=txid" json:"txid,omitempty"`
	Proposal  *SignedProposal             `protobuf:"bytes,5,opt,name=proposal" json:"proposal,omitempty"`
	// event emitted by chaincode. Used only with Init or Invoke.
	// This event is then stored (currently)
	// with Block.NonHashData.TransactionResult
	ChaincodeEvent *ChaincodeEvent `protobuf:"bytes,6,opt,name=chaincode_event,json=chaincodeEvent" json:"chaincode_event,omitempty"`
	// channel id
	ChannelId string `protobuf:"bytes,7,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`
}

func (m *ChaincodeMessage) Reset()         { *m = ChaincodeMessage{} }
func (m *ChaincodeMessage) String() string { return proto.CompactTextString(m) }
func (*ChaincodeMessage) ProtoMessage()    {}
func (*ChaincodeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{0}
}

func (m *ChaincodeMessage) GetType() ChaincodeMessage_Type {
	if m != nil {
		return m.Type
	}
	return ChaincodeMessage_UNDEFINED
}

func (m *ChaincodeMessage) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *ChaincodeMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ChaincodeMessage) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *ChaincodeMessage) GetProposal() *SignedProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *ChaincodeMessage) GetChaincodeEvent() *ChaincodeEvent {
	if m != nil {
		return m.ChaincodeEvent
	}
	return nil
}

func (m *ChaincodeMessage) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

type GetState struct {
	Key        string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection" json:"collection,omitempty"`
}

func (m *GetState) Reset()         { *m = GetState{} }
func (m *GetState) String() string { return proto.CompactTextString(m) }
func (*GetState) ProtoMessage()    {}
func (*GetState) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{1}
}

func (m *GetState) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetState) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type PutState struct {
	Key        string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value      []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection" json:"collection,omitempty"`
}

func (m *PutState) Reset()         { *m = PutState{} }
func (m *PutState) String() string { return proto.CompactTextString(m) }
func (*PutState) ProtoMessage()    {}
func (*PutState) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{2}
}

func (m *PutState) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PutState) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PutState) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type DelState struct {
	Key        string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection" json:"collection,omitempty"`
}

func (m *DelState) Reset()         { *m = DelState{} }
func (m *DelState) String() string { return proto.CompactTextString(m) }
func (*DelState) ProtoMessage()    {}
func (*DelState) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{3}
}

func (m *DelState) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DelState) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type GetStateByRange struct {
	StartKey   string `protobuf:"bytes,1,opt,name=startKey" json:"startKey,omitempty"`
	EndKey     string `protobuf:"bytes,2,opt,name=endKey" json:"endKey,omitempty"`
	Collection string `protobuf:"bytes,3,opt,name=collection" json:"collection,omitempty"`
}

func (m *GetStateByRange) Reset()         { *m = GetStateByRange{} }
func (m *GetStateByRange) String() string { return proto.CompactTextString(m) }
func (*GetStateByRange) ProtoMessage()    {}
func (*GetStateByRange) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{4}
}

func (m *GetStateByRange) GetStartKey() string {
	if m != nil {
		return m.StartKey
	}
	return ""
}

func (m *GetStateByRange) GetEndKey() string {
	if m != nil {
		return m.EndKey
	}
	return ""
}

func (m *GetStateByRange) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type GetQueryResult struct {
	Query      string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Collection string `protobuf:"bytes,2,opt,name=collection" json:"collection,omitempty"`
}

func (m *GetQueryResult) Reset()         { *m = GetQueryResult{} }
func (m *GetQueryResult) String() string { return proto.CompactTextString(m) }
func (*GetQueryResult) ProtoMessage()    {}
func (*GetQueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{5}
}

func (m *GetQueryResult) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *GetQueryResult) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

type GetHistoryForKey struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *GetHistoryForKey) Reset()         { *m = GetHistoryForKey{} }
func (m *GetHistoryForKey) String() string { return proto.CompactTextString(m) }
func (*GetHistoryForKey) ProtoMessage()    {}
func (*GetHistoryForKey) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{6}
}

func (m *GetHistoryForKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetHistoryQueryResult struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *GetHistoryQueryResult) Reset()         { *m = GetHistoryQueryResult{} }
func (m *GetHistoryQueryResult) String() string { return proto.CompactTextString(m) }
func (*GetHistoryQueryResult) ProtoMessage()    {}
func (*GetHistoryQueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{7}
}

func (m *GetHistoryQueryResult) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetHistoryForKeyPageEnabled struct {
	StartKey   string `protobuf:"bytes,1,opt,name=startKey" json:"startKey,omitempty"`
	EndKey     string `protobuf:"bytes,2,opt,name=endKey" json:"endKey,omitempty"`
	Skip       int32  `protobuf:"varint,3,opt,name=skip" json:"skip,omitempty"`
	Descending bool   `protobuf:"varint,4,opt,name=descending" json:"descending,omitempty"`
}

func (m *GetHistoryForKeyPageEnabled) Reset()         { *m = GetHistoryForKeyPageEnabled{} }
func (m *GetHistoryForKeyPageEnabled) String() string { return proto.CompactTextString(m) }
func (*GetHistoryForKeyPageEnabled) ProtoMessage()    {}
func (*GetHistoryForKeyPageEnabled) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{8}
}

func (m *GetHistoryForKeyPageEnabled) GetStartKey() string {
	if m != nil {
		return m.StartKey
	}
	return ""
}

func (m *GetHistoryForKeyPageEnabled) GetEndKey() string {
	if m != nil {
		return m.EndKey
	}
	return ""
}

func (m *GetHistoryForKeyPageEnabled) GetSkip() int {
	if m != nil {
		return int(m.Skip)
	}
	return 0
}

func (m *GetHistoryForKeyPageEnabled) GetDescending() bool {
	if m != nil {
		return m.Descending
	}
	return false
}

type QueryStateNext struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *QueryStateNext) Reset()         { *m = QueryStateNext{} }
func (m *QueryStateNext) String() string { return proto.CompactTextString(m) }
func (*QueryStateNext) ProtoMessage()    {}
func (*QueryStateNext) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{9}
}

func (m *QueryStateNext) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type QueryStateClose struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *QueryStateClose) Reset()         { *m = QueryStateClose{} }
func (m *QueryStateClose) String() string { return proto.CompactTextString(m) }
func (*QueryStateClose) ProtoMessage()    {}
func (*QueryStateClose) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{10}
}

func (m *QueryStateClose) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type QueryResultBytes struct {
	ResultBytes []byte `protobuf:"bytes,1,opt,name=resultBytes,proto3" json:"resultBytes,omitempty"`
}

func (m *QueryResultBytes) Reset()         { *m = QueryResultBytes{} }
func (m *QueryResultBytes) String() string { return proto.CompactTextString(m) }
func (*QueryResultBytes) ProtoMessage()    {}
func (*QueryResultBytes) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{11}
}

func (m *QueryResultBytes) GetResultBytes() []byte {
	if m != nil {
		return m.ResultBytes
	}
	return nil
}

type QueryResponse struct {
	Results []*QueryResultBytes `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	HasMore bool                `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	Id      string              `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{12}
}

func (m *QueryResponse) GetResults() []*QueryResultBytes {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *QueryResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type QueryResponseWithMetaInfo struct {
	Results   []*QueryResultBytes `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	HasMore   bool                `protobuf:"varint,2,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	Id        string              `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	TotalRows int32               `protobuf:"varint,4,opt,name=total_rows,json=totalRows" json:"total_rows,omitempty"`
	Offset    int32               `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Bookmark  string              `protobuf:"bytes,6,opt,name=bookmark" json:"bookmark,omitempty"`
}

func (m *QueryResponseWithMetaInfo) Reset()         { *m = QueryResponseWithMetaInfo{} }
func (m *QueryResponseWithMetaInfo) String() string { return proto.CompactTextString(m) }
func (*QueryResponseWithMetaInfo) ProtoMessage()    {}
func (*QueryResponseWithMetaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{13}
}

func (m *QueryResponseWithMetaInfo) GetResults() []*QueryResultBytes {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponseWithMetaInfo) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *QueryResponseWithMetaInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueryResponseWithMetaInfo) GetTotalRows() int {
	if m != nil {
		return int(m.TotalRows)
	}
	return 0
}

func (m *QueryResponseWithMetaInfo) GetOffset() int {
	if m != nil {
		return int(m.Offset)
	}
	return 0
}

func (m *QueryResponseWithMetaInfo) GetBookmark() string {
	if m != nil {
		return m.Bookmark
	}
	return ""
}

func init() {
	proto.RegisterType((*ChaincodeMessage)(nil), "protos.ChaincodeMessage")
	proto.RegisterType((*GetState)(nil), "protos.GetState")
	proto.RegisterType((*PutState)(nil), "protos.PutState")
	proto.RegisterType((*DelState)(nil), "protos.DelState")
	proto.RegisterType((*GetStateByRange)(nil), "protos.GetStateByRange")
	proto.RegisterType((*GetQueryResult)(nil), "protos.GetQueryResult")
	proto.RegisterType((*GetHistoryForKey)(nil), "protos.GetHistoryForKey")
	proto.RegisterType((*GetHistoryQueryResult)(nil), "protos.GetHistoryQueryResult")
	proto.RegisterType((*GetHistoryForKeyPageEnabled)(nil), "protos.GetHistoryForKeyPageEnabled")
	proto.RegisterType((*QueryStateNext)(nil), "protos.QueryStateNext")
	proto.RegisterType((*QueryStateClose)(nil), "protos.QueryStateClose")
	proto.RegisterType((*QueryResultBytes)(nil), "protos.QueryResultBytes")
	proto.RegisterType((*QueryResponse)(nil), "protos.QueryResponse")
	proto.RegisterType((*QueryResponseWithMetaInfo)(nil), "protos.QueryResponseWithMetaInfo")
	proto.RegisterEnum("protos.ChaincodeMessage_Type", ChaincodeMessage_Type_name, ChaincodeMessage_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ChaincodeSupport service

type ChaincodeSupportClient interface {
	Register(ctx context.Context, opts ...grpc.CallOption) (ChaincodeSupport_RegisterClient, error)
}

type chaincodeSupportClient struct {
	cc *grpc.ClientConn
}

func NewChaincodeSupportClient(cc *grpc.ClientConn) ChaincodeSupportClient {
	return &chaincodeSupportClient{cc}
}

func (c *chaincodeSupportClient) Register(ctx context.Context, opts ...grpc.CallOption) (ChaincodeSupport_RegisterClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ChaincodeSupport_serviceDesc.Streams[0], c.cc, "/protos.ChaincodeSupport/Register", opts...)
	if err != nil {
		return nil, err
	}
	x := &chaincodeSupportRegisterClient{stream}
	return x, nil
}

type ChaincodeSupport_RegisterClient interface {
	Send(*ChaincodeMessage) error
	Recv() (*ChaincodeMessage, error)
	grpc.ClientStream
}

type chaincodeSupportRegisterClient struct {
	grpc.ClientStream
}

func (x *chaincodeSupportRegisterClient) Send(m *ChaincodeMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chaincodeSupportRegisterClient) Recv() (*ChaincodeMessage, error) {
	m := new(ChaincodeMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ChaincodeSupport service

type ChaincodeSupportServer interface {
	Register(ChaincodeSupport_RegisterServer) error
}

func RegisterChaincodeSupportServer(s *grpc.Server, srv ChaincodeSupportServer) {
	s.RegisterService(&_ChaincodeSupport_serviceDesc, srv)
}

func _ChaincodeSupport_Register_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChaincodeSupportServer).Register(&chaincodeSupportRegisterServer{stream})
}

type ChaincodeSupport_RegisterServer interface {
	Send(*ChaincodeMessage) error
	Recv() (*ChaincodeMessage, error)
	grpc.ServerStream
}

type chaincodeSupportRegisterServer struct {
	grpc.ServerStream
}

func (x *chaincodeSupportRegisterServer) Send(m *ChaincodeMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chaincodeSupportRegisterServer) Recv() (*ChaincodeMessage, error) {
	m := new(ChaincodeMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChaincodeSupport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.ChaincodeSupport",
	HandlerType: (*ChaincodeSupportServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Register",
			Handler:       _ChaincodeSupport_Register_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "peer/chaincode_shim.proto",
}

func init() {
	proto.RegisterFile("peer/chaincode_shim.proto", fileDescriptor3)
}

var fileDescriptor3 = []byte{
	// 973 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5d, 0x6f, 0xe2, 0x46,
	0x14, 0x5d, 0x02, 0x24, 0xe6, 0x26, 0x21, 0xb3, 0x93, 0x8f, 0x12, 0xda, 0x6d, 0x29, 0xda, 0x07,
	0xfa, 0x50, 0x68, 0x69, 0x1f, 0xfa, 0xb0, 0x52, 0x45, 0x60, 0x42, 0xac, 0x10, 0xc3, 0x8e, 0x9d,
	0xed, 0xa6, 0x2f, 0x96, 0xc1, 0x13, 0x63, 0xc5, 0x78, 0x5c, 0xcf, 0xb0, 0xbb, 0xfc, 0x80, 0x3e,
	0xf5, 0xb7, 0x55, 0xfd, 0x4b, 0xd5, 0xd8, 0x98, 0x10, 0xd2, 0x28, 0xd2, 0x4a, 0x7d, 0xb2, 0xcf,
	0xbd, 0xe7, 0x9e, 0x7b, 0xee, 0xcc, 0x68, 0x06, 0x4e, 0x23, 0xc6, 0xe2, 0xd6, 0x64, 0xea, 0xf8,
	0xe1, 0x84, 0xbb, 0xcc, 0x16, 0x53, 0x7f, 0xd6, 0x8c, 0x62, 0x2e, 0x39, 0xde, 0x4e, 0x3e, 0xa2,
	0x5a, 0xdd, 0xa0, 0xb0, 0x0f, 0x2c, 0x94, 0x29, 0xa7, 0x7a, 0x98, 0xe4, 0xa2, 0x98, 0x47, 0x5c,
	0x38, 0xc1, 0x32, 0xf8, 0x8d, 0xc7, 0xb9, 0x17, 0xb0, 0x56, 0x82, 0xc6, 0xf3, 0xdb, 0x96, 0xf4,
	0x67, 0x4c, 0x48, 0x67, 0x16, 0xa5, 0x84, 0xfa, 0x3f, 0x45, 0x40, 0xdd, 0x4c, 0xef, 0x8a, 0x09,
	0xe1, 0x78, 0x0c, 0xff, 0x08, 0x05, 0xb9, 0x88, 0x58, 0x25, 0x57, 0xcb, 0x35, 0xca, 0xed, 0x57,
	0x29, 0x55, 0x34, 0x37, 0x79, 0x4d, 0x6b, 0x11, 0x31, 0x9a, 0x50, 0xf1, 0x2f, 0x50, 0x5a, 0x49,
	0x57, 0xb6, 0x6a, 0xb9, 0xc6, 0x6e, 0xbb, 0xda, 0x4c, 0x9b, 0x37, 0xb3, 0xe6, 0x4d, 0x2b, 0x63,
	0xd0, 0x7b, 0x32, 0xae, 0xc0, 0x4e, 0xe4, 0x2c, 0x02, 0xee, 0xb8, 0x95, 0x7c, 0x2d, 0xd7, 0xd8,
	0xa3, 0x19, 0xc4, 0x18, 0x0a, 0xf2, 0x93, 0xef, 0x56, 0x0a, 0xb5, 0x5c, 0xa3, 0x44, 0x93, 0x7f,
	0xdc, 0x06, 0x2d, 0x1b, 0xb1, 0x52, 0x4c, 0xda, 0x9c, 0x64, 0xf6, 0x4c, 0xdf, 0x0b, 0x99, 0x3b,
	0x5a, 0x66, 0xe9, 0x8a, 0x87, 0x7f, 0x85, 0x83, 0x8d, 0x25, 0xab, 0x6c, 0x3f, 0x2c, 0x5d, 0x4d,
	0x46, 0x54, 0x96, 0x96, 0x27, 0x0f, 0x30, 0x7e, 0x05, 0x30, 0x99, 0x3a, 0x61, 0xc8, 0x02, 0xdb,
	0x77, 0x2b, 0x3b, 0x89, 0x9d, 0xd2, 0x32, 0xa2, 0xbb, 0xf5, 0xbf, 0xf2, 0x50, 0x50, 0x4b, 0x81,
	0xf7, 0xa1, 0x74, 0x6d, 0xf4, 0xc8, 0xb9, 0x6e, 0x90, 0x1e, 0x7a, 0x81, 0xf7, 0x40, 0xa3, 0xa4,
	0xaf, 0x9b, 0x16, 0xa1, 0x28, 0x87, 0xcb, 0x00, 0x19, 0x22, 0x3d, 0xb4, 0x85, 0x35, 0x28, 0xe8,
	0x86, 0x6e, 0xa1, 0x3c, 0x2e, 0x41, 0x91, 0x92, 0x4e, 0xef, 0x06, 0x15, 0xf0, 0x01, 0xec, 0x5a,
	0xb4, 0x63, 0x98, 0x9d, 0xae, 0xa5, 0x0f, 0x0d, 0x54, 0x54, 0x92, 0xdd, 0xe1, 0xd5, 0x68, 0x40,
	0x2c, 0xd2, 0x43, 0xdb, 0x8a, 0x4a, 0x28, 0x1d, 0x52, 0xb4, 0xa3, 0x32, 0x7d, 0x62, 0xd9, 0xa6,
	0xd5, 0xb1, 0x08, 0xd2, 0x14, 0x1c, 0x5d, 0x67, 0xb0, 0xa4, 0x60, 0x8f, 0x0c, 0x96, 0x10, 0xf0,
	0x11, 0x20, 0xdd, 0x78, 0x37, 0xbc, 0x24, 0x76, 0xf7, 0xa2, 0xa3, 0x1b, 0xdd, 0x61, 0x8f, 0xa0,
	0xdd, 0xd4, 0xa0, 0x39, 0x1a, 0x1a, 0x26, 0x41, 0xfb, 0xf8, 0x04, 0xf0, 0x4a, 0xd0, 0x3e, 0xbb,
	0xb1, 0x69, 0xc7, 0xe8, 0x13, 0x54, 0x56, 0xb5, 0x2a, 0xfe, 0xf6, 0x9a, 0xd0, 0x1b, 0x9b, 0x12,
	0xf3, 0x7a, 0x60, 0xa1, 0x03, 0x15, 0x4d, 0x23, 0x29, 0xdf, 0x20, 0xef, 0x2d, 0x84, 0xf0, 0x31,
	0xbc, 0x5c, 0x8f, 0x76, 0x07, 0x43, 0x93, 0xa0, 0x97, 0xca, 0xcd, 0x25, 0x21, 0xa3, 0xce, 0x40,
	0x7f, 0x47, 0x10, 0xc6, 0x5f, 0xc0, 0xa1, 0x52, 0xbc, 0xd0, 0x4d, 0x6b, 0x48, 0x6f, 0xec, 0xf3,
	0x21, 0xb5, 0x2f, 0xc9, 0x0d, 0x3a, 0xc4, 0x5f, 0x41, 0x65, 0x3d, 0xf1, 0xa0, 0xe5, 0x11, 0x7e,
	0x0d, 0xb5, 0xff, 0x28, 0xb3, 0x47, 0x9d, 0x3e, 0xb1, 0x89, 0xd1, 0x39, 0x1b, 0x90, 0x1e, 0x3a,
	0xae, 0xbf, 0x01, 0xad, 0xcf, 0xa4, 0x29, 0x1d, 0xc9, 0x30, 0x82, 0xfc, 0x1d, 0x5b, 0x24, 0xe7,
	0xb8, 0x44, 0xd5, 0x2f, 0xfe, 0x1a, 0x60, 0xc2, 0x83, 0x80, 0x4d, 0xa4, 0xcf, 0xc3, 0xe4, 0xa0,
	0x96, 0xe8, 0x5a, 0xa4, 0x4e, 0x41, 0x1b, 0xcd, 0x9f, 0xac, 0x3e, 0x82, 0xe2, 0x07, 0x27, 0x98,
	0xb3, 0xa4, 0x70, 0x8f, 0xa6, 0x60, 0x43, 0x33, 0xff, 0x48, 0xf3, 0x0d, 0x68, 0x3d, 0x16, 0x7c,
	0xae, 0x23, 0x06, 0x07, 0xd9, 0x3c, 0x67, 0x0b, 0xea, 0x84, 0x1e, 0xc3, 0x55, 0xd0, 0x84, 0x74,
	0x62, 0x79, 0xb9, 0x52, 0x5a, 0x61, 0x7c, 0x02, 0xdb, 0x2c, 0x74, 0x55, 0x26, 0x95, 0x5a, 0xa2,
	0x67, 0x4d, 0x9e, 0x43, 0xb9, 0xcf, 0xe4, 0xdb, 0x39, 0x8b, 0x17, 0x94, 0x89, 0x79, 0x20, 0xd5,
	0xb0, 0x7f, 0x28, 0xb8, 0x6c, 0x91, 0x82, 0x67, 0xed, 0xbe, 0x06, 0xd4, 0x67, 0xf2, 0xc2, 0x17,
	0x92, 0xc7, 0x8b, 0x73, 0x1e, 0xab, 0xde, 0x8f, 0x86, 0xae, 0x7f, 0x0f, 0xc7, 0xf7, 0xac, 0x67,
	0x9b, 0xd6, 0xff, 0xcc, 0xc1, 0x97, 0x9b, 0xaa, 0x23, 0xc7, 0x63, 0x24, 0x74, 0xc6, 0x01, 0x73,
	0x3f, 0x6b, 0x41, 0x30, 0x14, 0xc4, 0x9d, 0x1f, 0x25, 0x4b, 0x51, 0xa4, 0xc9, 0xbf, 0x1a, 0xce,
	0x65, 0x62, 0xc2, 0x42, 0xd7, 0x0f, 0xbd, 0xe4, 0xde, 0xd1, 0xe8, 0x5a, 0xa4, 0x5e, 0x83, 0x72,
	0x62, 0x36, 0xd9, 0x0d, 0x83, 0x7d, 0x92, 0xb8, 0x0c, 0x5b, 0xbe, 0xbb, 0xec, 0xb9, 0xe5, 0xbb,
	0xf5, 0x6f, 0xe1, 0xe0, 0x9e, 0xd1, 0x0d, 0xb8, 0x60, 0x8f, 0x28, 0x3f, 0x03, 0x5a, 0x9b, 0xf8,
	0x6c, 0x21, 0x99, 0xc0, 0x35, 0xd8, 0x8d, 0xef, 0x61, 0x42, 0xde, 0xa3, 0xeb, 0xa1, 0x7a, 0x08,
	0xfb, 0x59, 0x55, 0xc4, 0x43, 0xc1, 0x70, 0x1b, 0x76, 0xd2, 0xbc, 0xa2, 0xe7, 0x1b, 0xbb, 0xed,
	0x4a, 0x76, 0x9b, 0x6d, 0xaa, 0xd3, 0x8c, 0x88, 0x4f, 0x41, 0x9b, 0x3a, 0xc2, 0x9e, 0xf1, 0x38,
	0x3d, 0xc2, 0x1a, 0xdd, 0x99, 0x3a, 0xe2, 0x8a, 0xc7, 0x99, 0xcb, 0xfc, 0xca, 0xe5, 0xdf, 0x39,
	0x38, 0x7d, 0xd0, 0xf0, 0x37, 0x5f, 0x4e, 0xaf, 0x98, 0x74, 0xf4, 0xf0, 0x96, 0xff, 0xcf, 0xcd,
	0xd5, 0x85, 0x2b, 0xb9, 0x74, 0x02, 0x3b, 0xe6, 0x1f, 0x45, 0xb2, 0x0f, 0x45, 0x5a, 0x4a, 0x22,
	0x94, 0x7f, 0x14, 0x6a, 0x4b, 0xf9, 0xed, 0xad, 0x60, 0x32, 0x79, 0x02, 0x8a, 0x74, 0x89, 0xd4,
	0x31, 0x18, 0x73, 0x7e, 0x37, 0x73, 0xe2, 0xbb, 0xe4, 0x86, 0x2f, 0xd1, 0x15, 0x6e, 0xbf, 0x5f,
	0x7b, 0xe7, 0xcc, 0x79, 0x14, 0xf1, 0x58, 0xe2, 0x1e, 0x68, 0x94, 0x79, 0xbe, 0x90, 0x2c, 0xc6,
	0x95, 0xa7, 0x5e, 0xb9, 0xea, 0x93, 0x99, 0xfa, 0x8b, 0x46, 0xee, 0x87, 0xdc, 0xd9, 0x10, 0xea,
	0x3c, 0xf6, 0x9a, 0xd3, 0x45, 0xc4, 0xe2, 0x80, 0xb9, 0x1e, 0x8b, 0x9b, 0xb7, 0xce, 0x38, 0xf6,
	0x27, 0x59, 0x9d, 0x7a, 0x98, 0x7f, 0xff, 0xce, 0xf3, 0xe5, 0x74, 0x3e, 0x6e, 0x4e, 0xf8, 0xac,
	0xb5, 0x46, 0x6d, 0xa5, 0xd4, 0xf4, 0x81, 0x16, 0x2d, 0x45, 0x1d, 0xa7, 0xaf, 0xfd, 0x4f, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x00, 0x24, 0x49, 0x11, 0x08, 0x00, 0x00,
}
